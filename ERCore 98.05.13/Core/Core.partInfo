//Core.partInfoconstant k_CopyrightString := LocObj ( "© 1998 Netstrategy Software Inc.", 'extrasSlip.copyString );partData := {	author:			"Les R. Titze",	copyright:		k_CopyrightString,	};if not IsGlobalConstant ( 'k_OS_2_1_ONLY_VERSION ) then	DefConst ( 'k_OS_2_1_ONLY_VERSION, true );constant kCoreVersion  := "1.4.3b2a"	& ( if k_OS_2_1_ONLY_VERSION then "" else "U" )	& ( if language = 'German then " D" );constant kCoreVerNum   := 0x0143;print ( DateNTime(Time()) && "<---" && $' & kAppName & $' && "as '|" & kAppSymbol	& "| Version" && kCoreVersion	& ( if kDebugOn then " DEBUG" )	& ( if k_OS_2_1_ONLY_VERSION then " <2.1 ONLY>" else " <UNIVERSAL>" )	& ( if language = 'English then "" else (" " & language) ) );constant kPartName := "EnRoute  Core";OpenResFile( Home & "Core:Core.rsrc"); 	DefConst ( 'kLibIcon,		if kDebugOn then GetPICTAsBits ( "debugIcon", true );			else GetPICTAsBits ( "unitIcon", true ) );CloseResFile();SetPartFrameSlot ( 'text, kPartName ); // give extras icon a better nameSetPartFrameSlot ( 'icon, kLibIcon );SetPartFrameSlot ( 'closeControl, true );DefConst ( 'kPI_CreatedLabel, LocObj ( "Created:", 'extrasSlip.created ) );// LRT - 97/05/09 2:55 AMDefConst ( 'k_Build_Time, Time() );DefConst ( 'kPI_AuthorCopyright,	LocObj ( "Author:", 'extrasSlip.author )		&& "Les R. Titze" & unicodeCR		& k_CopyrightString & "\n\n" );SetPartFrameSlot ( 'TapAction, func()	begin	if kDebugOn then		begin		local owner := ResolveEntryAlias ( userConfiguration.currentPersona );		if owner then owner := owner.name;		if owner then owner := owner.last;		owner := (owner and IsString(owner) and StrEqual(owner,"Titze") );		end;	if kDebugOn then		begin		local pkg := LFetch ( GetPackages(), kPartName, 0, '|str=|, 'title );		local pkgE := GetPackageEntry ( kPartName, pkg.store );		local info := GetPkgRefInfo(pkgE.pkgRef);		local s := LongDateStr ( info.creationdate, (ROM_datetimestrspecs).yearMonthDayStrSpec );		if owner then			begin			s := LongDateStr  ( info.creationdate, (ROM_datetimestrspecs).abbrDayOfWeekStrSpec )				&& ShortDateStr  ( info.creationdate, (ROM_datetimestrspecs).numericDateStrSpec )				&& HourMinute ( info.creationdate );			s := kPI_CreatedLabel				&& s & unicodeCR;	// DateNTime(info.creationdate) & unicodeCR;			s := s & LocObj ( "Size:", 'extrasSlip.size )				&& info.size & unicodeCR;			end;		else			s := kPI_CreatedLabel && s & unicodeCR;		end;	else		begin		local s := LongDateStr ( k_Build_Time, (ROM_datetimestrspecs).yearMonthDayStrSpec );		s := kPI_CreatedLabel && s & unicodeCR;		end;/*	s := s & LocObj ( "Author:", 'extrasSlip.author )		&& "Les R. Titze" & unicodeCR;	s := s & k_CopyrightString		& "\n\n";*/	s := s & kPI_AuthorCopyright;	local er := GetGlobalVar ( 'EnRouteCore );	if er and er.installed and Length(er.installed) > 0 then		begin		s := s & LocObj ( "Service modules:", 'extrasSlip.moduleLabel ) & unicodeCR;		local i;		foreach i in er.installed do			begin			s := s && i.title & $,;			end;		s := SubStr ( s, 0, StrLen(s)-1 );		end;	else		begin		s := s & LocObj ( "No service modules installed", 'extrasSlip.noModules );		end;	local pTitle := ParamStr (		LocObj ( "EnRoute Core Library ^0", 'extrasSlip.title ),		[ kCoreVersion ] );	local a := BuildContext (		{	    _proto: @180,	    viewJustify: 80,	    viewBounds: SetBounds ( 0, 0, 200, 125 ),	 //   viewQuitScript: func() begin a := nil; gc(); end,	    stepChildren: [	      { _proto: @229,	        title: pTitle,	        },	      { _proto: @218,	        text: s,	        viewJustify: 240,	        viewBounds: SetBounds(5, 22, -5, -5),	        viewFont: @100,	        },			],		} );	a:Open();//	GetRoot():Notify ( kNotifyAlert+1, kPartName && "Library" && kCoreVersion, s );	return nil;	end );