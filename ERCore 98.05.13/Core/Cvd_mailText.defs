DefConst ( 'k_mailTextVDef_prFrameFormat,	{	_proto: protoRoutingFormat,	symbol:	'prFrameFormat,	title:	"Default",	} );DefConst ( 'k_mailTextVDef_mailFormat,	{	_proto:			protoCoverPageFormatDeprecated,	// protoCoverPageFormat,	// @60	routingType:	'Print,	type:			'printFormat,	version:		1,	symbol:			'mailFormat,	path:			'mailFormat,	name:			k_MailGroup,	// "Mail",	title:			k_MailGroup,	// "Mail",	textScript: func(x,item) item.text,	mainFormat:		{		_proto: protoPrintFormat,	// @200		viewJustify: 240,		data: NIL,		kids: NIL,		reflowStart: 0,		StartFlushWithChild: func(a) nil,	//	transportProto: GetLayout ( "C_Transport" ),		viewSetupFormScript: func()			begin			inherited:viewSetupFormScript();			local theFont := target._mailFont;			if not theFont then				begin				theFont := GetUserConfig ( 'mailFont );				if not theFont then					begin					theFont := MakeCompactFont ( 'geneva, 10, 0 );					SetUserConfig ( 'mailFont, theFont );					end;				end;			theFont := SetFontSize ( theFont, 10 );			local fHght := FontHeight(theFont);			local gBox := :GlobalBox();			viewBounds := SetBounds (				max ( 60 - gBox.left, 0 ),				max ( 60 - gBox.top,  0 ),				viewBounds.right - 30,				viewBounds.bottom - 30 );			local wid := gBox.right - gBox.left - 6;			// LRT - 96/08/02 1:09 AM			local transp := GetItemTransport ( target );			local header := transp:HeaderText(target);			//local header := transportProto:HeaderText(target);			// LRT - 96/08/22 4:22 PM			// bug fix for printing    <post 1.3>			// WAS:			// local numAddrs := 4 + Length ( target.toRef ) + Length(target.cc) + Length(target.bcc);			// NOW:			local numAddrs := 4 + Length ( target.toRef );			if target.cc then numAddrs  := numAddrs + Length(target.cc);			if target.bcc then numAddrs := numAddrs + Length(target.bcc);			local hdrHgt := numAddrs * fHght;			self.data := [				{				_proto:			@193,		// paragraph				viewBounds:		SetBounds ( 0, 0, wid - 4, hdrHgt ),				viewStationery:	'para,				text:			header,				viewFont:		theFont,				},				{				_proto:			@193,		// paragraph				viewBounds:		RelBounds ( 0, hdrHgt + fHght, wid - 4, fHght ),				viewStationery:	'para,				text:			target.text,				viewFont:		theFont,				} ];			self.reflowStart := 0;			end,		printNextPageScript: func()			begin			kids and reflowStart < length(kids) and :RedoChildren();			end,		viewChildren: [ viewChildren:			{			viewClass: 74,	// clView			viewBounds: NIL,			viewFlags: 3,			viewFormat: 0,			viewJustify: 65552,			viewSetupFormScript: func()				begin				self.viewBounds := :Parent():LocalBox();				end,			viewSetupChildrenScript: func()				begin				if not kids and data then					begin					local theFont := GetUserConfig ( 'mailFont );					if not theFont then						begin						theFont := 12289;						SetUserConfig ( 'mailFont, theFont );						end;					theFont := SetFontSize(theFont, 10);					local theBox := InsetRect ( fields.printerPageBounds, 60, 0 );					theBox.top := theBox.top + 60;					theBox.bottom := theBox.bottom - 60;					kids := ReFlow ( data,						{						reflowFont: theFont,						unistyle: nil,						graphicsGutter: 8,						textGutter: -8,						viewLineSpacing: FontHeight(theFont),						pageBounds: theBox,						}, fields.targetBox, :LocalBox() );					end;				if kids then					self.stepChildren := ArrayMunger ( [], 0, 0, kids, reflowStart, nil )				end,			viewSetupDoneScript: func()				begin				if self.stepChildren then					reflowStart := reflowStart + Length ( self.stepChildren );				end,			}, ],		}	} );