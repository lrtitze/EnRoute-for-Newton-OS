// USAGE:// someStr := LocObj ( "The US English text", 'someSubset.someString );DefGlobalVar ( 'k_Loc_English,	{	routeBinaryVDef:		{		vDefName:		"Binary Enclosure",		heading:		"EnRoute Binary Enclosure",		dataSize:		"Size:\t^0 bytes",		// ^0 parameter is filled with numeric file size value		fileNameLabel:	"Filename:",		fileTypeLabel:	"Type:",		creatorLabel:	"Creator:",		},	routeSlip:		{		toLabel:		"To",		ccLabel:		"Cc",		bccLabel:		"Bcc",		subject:		"Subject",		multiple:		"Multiple Items",		textOnly:		"Text Only",		receipt:		"Receipt Requested",		showText:		"Show Text",		format:			"Format",		package:		"Package",		badAdress:		"Unable to send.\n\nThe email address for \u0022\u^0\u0022\u is invalid.",			// ^0 parameter is filled with invalid addresee's name		sorryTxtOnly:	"Sorry, only text is supported by your chosen format!",		noName:			"None",		needRecipient:	"You have not chosen a recipient. Please fill in the 'To' address and try again.",		inkInBody:		"The text copy of the mail contains ink which can not be sent. You may remove or convert the ink words.",		removeBtn:		"Remove",		convertBtn:		"Convert",		convertEmail:	"Converting e-mail subject",		inksEmailName:	"eMail address for ^0",			// ^0 parameter is filled with name		inksEmailAddr:	"Please verify that ^0 is converted correctly.",			// ^0 parameter is filled with ink email address		inkReplacement:	"-ink-",		},	connectSlip:		{		slipTitleSend:		"Send ^0 for:",		slipTitleReceive:	"Receive ^0 for:",		optsBtnLabel:		"Options",		optGetUnread:		"Get Unread Mail",		optGetAll:			"Get All Mail",		optGetRead:			"Get Read Mail",		optBrowseUnread:	"Browse Unread Mail",		optBrowseAll:		"Browse All Mail",		optBrowseRead:		"Browse Read Mail",		optSendOutBox:		"Send Out Box items",		optSendOnly:		"Send Only",		noServer:			"(no server)",		otherPicker:		"Other Number",		valOtherLabel:		"Enter other ^0 server info:",			// ^0 parameter is filled with transport title		valServerLabel:		"^0 Server",			// ^0 parameter is filled with transport title		phoneNumLabel:		"At",		connectBtnLabel:	"Connect",		valNoAccount:		"Your configuration is incomplete. Please enter your ^0 account information:",			// ^0 parameter is filled with transport title		valNoServer:		"Your configuration is incomplete. Please enter the ^0 server information:",			// ^0 parameter is filled with transport title		noWorkSite:			"Please select a worksite from the popup at the upper left corner of the connection slip before tapping the connect button.",		},	inkConvert:		{		cvtAccountTitle:	"Converting ^0 account",			// ^0 parameter is filled with transport title		cvtPasswordTitle:	"Converting ^0 password",			// ^0 parameter is filled with transport title		cvtPhoneTitle:		"Converting ^0 server phone number",			// ^0 parameter is filled with transport title		inkVerifyText:		"Please verify that the ink text was converted correctly.",		},// LocObj ( "Converting ^0 server phone number", 'inkConvert.cvtPhoneTitle ),	extrasSlip:		{		title:			"EnRoute Core Library ^0",			// ^0 parameter is filled with version number		created:		"Created:",		size:			"Size:",		author:			"Author:",		moduleLabel:	"Service modules:",		noModules:		"No service modules installed",		copyString:		"© 1997 Netstrategy Software Inc.",		},	mailTextVDef:		{		fontBtnLabel:	"Font",		sizeBtnLabel:	"Size",		ninePoint:		"9 point",		},	badAddrMsg:		{		badAddrTitle:	"Incomplete Delivery",		introText:		"Invalid address information for\n^0\n\n",			// ^0 parameter is filled with message subject		hdrSingular:	"Unknown ^0 address:\n",			// ^0 parameter is filled with transport title - "inet Mail"		hdrPlural:		"Unknown ^0 addresses:\n",			// ^0 parameter is filled with transport title - "inet Mail"		badNameLine:	"^0\n    as:  ^1\n",			// ^0 parameter is filled with addressee name			// ^1 parameter is filled with addressee's bad email address		noteHdr:		"\nNote:\n",		notSentNote:	"The message was not delivered to anyone.",		someSentNote:	"The message was delivered to others.",		},	addrPicker:		{		tempAddr:		"Other Address",	// WAS: "Temporary Address",		},	tagActions:		{		remove:			"Remove from Server",		copy2Notes:		"Copy to Notes",		reply:			"Reply",		replyAll:		"Reply to All",		forward:		"Forward",		addSender:		"Add Sender to Names",		font:			"Font",		// for Copy To Notes and Put Away of text		progressTitle:	"Multi-part note",		progressLabel:	"Part ^0 of ^1",			// ^0 parameter is filled with part number (1..n)			// ^1 parameter is filled with number of parts		continuedHdr:	"(part ^0)",			// ^0 parameter is filled with part number (2..n)		noMemToPutAway:	"Sorry, there is not enough storage space available to put away this text.",		unablePutAll:	"Sorry, unable to put away all of the message text.",		notesTextLabel:	"Notepad as text",		extrasTitle:	"Extras",		putToExtrasToo:	"and Extras",		pkgIsPutAway:	"The package ^0 has been loaded in Extras.",			// ^0 parameter is filled with package name		pkgNotPutAway:	"The package ^0 could not be put away.",			// ^0 parameter is filled with package name		specifyName:	"Please specify a name for email address \u201C\u^0\u201D",			// \u201C\u is double-quote unicode char			// ^0 parameter is filled with package name		emailName:		"EMail Name",		},// LocObj ( "EMail Name", 'transportInfo.emailName )	transportInfo:		{		enclosedPkg:	"Enclosed package",		enclosedFile:	"Enclosed file",		enclosedFrame:	"Enclosure application data",		textOnly:		"Text-only message",		logged:			"Logged message",		remote:			"Remote message",		fromLabel:		"From: ^0",			// ^0 parameter is filled with fromRef.email		toLabel:		"To: ^0",			// ^0 parameter is filled with toRef.email list		ccLabel:		"Cc: ^0",			// ^0 parameter is filled with cc.email list		bccLabel:		"Bcc: ^0",			// ^0 parameter is filled with bcc.email list		addresses:		"Addressees",		subjLabel:		"Subject: ^0",			// ^0 parameter is filled with message subject		sentLabel:		"Sent: ^0",			// ^0 parameter is filled with message sent date/time		receivedLabel:	"Received: ^0",			// ^0 parameter is filled with message time stamp		},// LocObj ( "Received: ^0", 'transportInfo.receivedLabel )	stdPrefs:		{		afterTxLabel:		"After sending",		txThenDisconnect:		"Disconnect",		txThenReceive:			"Receive mail",		afterRxLabel:		"After receiving",		rxThenDisconnect:		"Disconnect",		rxThenSend:				"Send mail",		interactLabel:		"When receiving",		actBrowse:				"Browse mail",		actDownload:			"Download mail",		downloadLabel:		"Download the first",		browseLabel:		"Browse the first",		nItems_1:				"1 item",		nItems_5:				"5 items",		nItems_10:				"10 items",		nItems_25:				"25 items",		nItems_50:				"50 items",		nItems_75:				"75 items",		nItems_100:				"100 items",		//---------				-----------		newOnly:				"New Only",		oldOnly:				"Read Only",		allMsgs:				"Any Items",		// 		logTextInbox:		"File read mail in",		logChoiceFile:		"File",		logChoiceLog:		"Log",		logChoiceDel:		"Delete",		fileText:			"File ^0 in",		fileAsCopies:		"copies",		fileAseLogs:		"log entries",		logTextOutbox:		"After sending mail",		routeVerb:			"Mail",		routeText:			"When mailing",		routeChoiceNow:		"Send now",		routeChoiceLater:	"Send later",		routeChoiceWhen:	"Specify when",		leaveMail:			"Leave on server",		pleaseDisco:		"Please disconnect from ^0 before changing your preferences",			// ^0 parameter is filled with the transport title		scheduleVerb:		"Schedule",		scheduleChkBox:		"Enabled",		modemBtnLabel:		"Modem",		noModemEC:			"No Error Correction",		hardwareEC:			"Hardware EC Only",		softwareEC:			"Software EC Only",		eitherEC:			"Hard or Soft EC",		prefsNoun:			"Preferences",		}, 	connect:		{		noPostOffice:	"Unable to locate a post office at ^0",			// ^0 parameter is filled with PO Phone Number		badPostOffice:	"Unable to proceed.\n\nThe post office at ^0 identified itself as ^1.\nYour setup expected ^2",			// ^0 parameter is filled with PO Phone Number			// ^1 parameter is filled with name of the post office connected to			// ^2 parameter is filled with the user's Worksite Info Server Name		nameRejected:	"Message reception has been disabled.\n\nYour user name and password was rejected.",		badUserInfo:	"Unable to proceed.\n\nYour name and password weren't accepted.",		badPassword:	"Unable to proceed.\n\nYour password is incorrect.",		expiredPass:	"Unable to proceed.\n\nYour password has expired.",		accountLocked:	"Unable to proceed.\n\nYour account is locked.",		noMessages:		"There were no messages to receive.",		stayConnMsg:	"Staying connected to the ^0 server will affect the amount of available memory.\n\nDo you want to disconnect now?",			// ^0 parameter is filled with the transport title		},// LocObj ( "Staying connected to the ^0 server will affect the amount of available memory.\n\nDo you want to disconnect now?", 'connect.stayConnMsg )	errors:		{		noProceed:		"Unable to proceed.\n\n",			// k_UnableProceedString		noServerResp:	"The server is not responding.",		txFailed:		"Unable to proceed.\n\nData transmission has failed.\n\n^0",			// ^0 parameter is filled with :TranslateError ( err )		noResponse:		"Unable to continue.\n\nThere was no response from the post office.",		txMaxRetries:	"Unable to proceed due to unreliable communication.\n\nThe maximum of ^0 transmission retries was exceeded.",			// ^0 parameter is filled with the number of retries permitted		exception:		"Unable to proceed.\n\nA software error has occurred.",		noUserConfig:	"Please select ^0 from the sender picker.",			// ^0 parameter is filled with one of the following three		ownerString:	"an owner",		siteString:		"a worksite",		bothString:		"an owner and worksite",		noRouteBody:	"This item cannot be routed; the original has been removed or deleted.",		noMemToGetItem:	"There wasn't enough memory available to store the content of this message.\n\n"						& "Try getting the message again after freeing up some storage space.",		noMemToSendIt:	"There wasn't enough storage space available to send this message.\n\n"						& "Try sending the message again after freeing up some memory.",		noMemForTx:		"This message could not be sent.\n\n"						& "Try sending the message again after freeing up some memory.",		invalidAddrs:	"An invalid address prevented this message from being sent.\n\n"						&& "Check the In Box for a message from EnRoute ^0.",			// ^0 parameter is filled with the transport title		notOnCard:		"Installation failed.\n\nThe EnRoute Core can be installed ONLY onto the internal store.",		newNewtOnly:	"Unable to install on this hardware.\n\nPlease contact Netstrategy Software for a version which will work with your Newton.",		unableMakeConn:	"Unable to make a connection.",		// k_UnableMakeConnString		err38001:		"Please try again later.",		err16009:		"The phone connection has been cut off.",		err24000:		"Try changing the EnRoute modem settings or check the modem you are connecting to.",		err24002_B:		"There was no answer.",		err24002_A:		"There was no answer at:\n   ^0",			// ^0 parameter is filled with the current phone number		err24003_B:		"The line is busy.",		err24003_A:		"The line is busy at:\n   ^0",			// ^0 parameter is filled with the current phone number		err14002:		"There wasn't enough memory to continue.",		err10401:		"The message's attached package information is invalid.",		myErr88000:		"There was only a partial logon.\n\n"						& "Try connecting again in a few minutes.",		myErr96020:		"The server quit responding during the data transfer.",		myErr96021:		"The data connection is too unreliable to proceed with the data transfer.",		myErr96022:		"The server cancelled the data transfer.",		myErr96028:		"Couldn't create the data structures for the data transfer.",		},	serviceVDef:		{		viewDefLabel:		"EnRoute Server",		serverPikLabel:		"Server Type",		unknown:			"Unknown",		serverNameLabel:	"Server Name",		serverPhoneLabel:	"Server Access #",		untitled:			"Untitled Server",		},	aboutBox:		{		aboutTitle:		"^0 for EnRoute",			// ^0 parameter is filled with transport title		version:		"Version ^0",			// ^0 parameter is filled with version number		createdBy:		"Created by ^0",			// ^0 parameter is filled with "Les R. Titze"		copyLine1:		"EnRoute and the ^0 module",			// ^0 parameter is filled with transport title		copyLine2:		"Copyright © 1995, 1997",		copyLine3:		"Netstrategy Software",		},// LocObj ( "From: ^0 (^1)", 'misc.fromBigLine )	misc:		{		untitled:		"untitled",		password:		"PASSWORD",		noSubject:		"<No Subject>",		},	dialogStatusMsgs:		{		Initializing:		"Initializing ModemÉ",		Dialing:			"DialingÉ",		Listening:			"Waiting for CallerÉ",		Connecting:			"Connecting to ServerÉ",		Login:				"Logging onto accountÉ",		Connected:			"ConnectedÉ",		Checking:			"Checking for MailÉ",		Storing:			"Storing MessagesÉ",		RemoteToBox:		"Moving to InBoxÉ",		Preparing:			"PreparingÉ",		Sending:			"SendingÉ",		More2Send:			"Checking for moreÉ",		Receiving:			"ReceivingÉ",		Reconstructing:		"ReconstructingÉ",		Confirming:			"Confirming callerÉ",		Disconnecting:		"DisconnectingÉ",		LostServer:			"Server disconnectedÉ",		Cancelling:			"CancellingÉ",		GotDisconnected:	"Network Disconnected",		},	} );SetLocalizationFrame ( {	English:	k_Loc_English,} );