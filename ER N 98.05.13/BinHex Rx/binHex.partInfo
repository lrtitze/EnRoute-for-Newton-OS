DefConst ( 'k_AuthorName, "Les R. Titze" );DefConst ( 'k_CopyrightStr,	LocObj ( "© 1997 Netstrategy Software", 'extrasSlip.copyString ) );partData := {	author:				k_AuthorName,	copyright:		k_CopyrightStr,	};constant kExtnVersion    := "1.4.2";constant kPartName       := "inet MIME BinHex";constant kPartFrameTitle := kPartName;print ( DateNTime(Time()) && "<---" && $' & kPartName & $' && "as '|" & kAppSymbol & "| Version" && kExtnVersion & (if kDebugOn then " DEBUG") );OpenResFile( Home & "resources"); 	DefConst ( 'kLibIcon, GetPICTAsBits ( "MimeExtnIcon", true ) );CloseResFile();SetPartFrameSlot ( 'text, kPartName ); // give extras icon a better nameSetPartFrameSlot ( 'icon, kLibIcon );SetPartFrameSlot ( 'closeControl, true );SetPartFrameSlot ( 'TapAction, func()	begin	local pkg := LFetch ( GetPackages(), kPartFrameTitle, 0, '|str=|, 'title );	local pkgE := GetPackageEntry ( kPartFrameTitle, pkg.store );	local info := GetPkgRefInfo(pkgE.pkgRef);	local s := LongDateStr ( info.creationdate, (ROM_datetimestrspecs).yearMonthDayStrSpec );	if kDebugOn then		begin		s := LongDateStr  ( info.creationdate, (ROM_datetimestrspecs).abbrDayOfWeekStrSpec )			&& ShortDateStr  ( info.creationdate, (ROM_datetimestrspecs).numericDateStrSpec )			&& HourMinute ( info.creationdate );		s := "Created:" && s & unicodeCR;	// DateNTime(info.creationdate) & unicodeCR;		s := s & "Size:" && info.size & unicodeCR;		end;	else		s := "Created:" && s & unicodeCR;	s := s & "Author:" && k_AuthorName & unicodeCR	       & k_CopyrightStr & unicodeCR         & "\nBinHex decoder for EnRoute inet." & unicodeCR         & "\nAllows reception of BinHex encoded MIME attachments.";	local height := 140;	local a := BuildContext ( {	    _proto: @180,	    viewJustify: 80,	    viewBounds: SetBounds ( 0, 0, 200, height ),	    stepChildren: [	      { _proto: @229,	        title: kPartName && kExtnVersion,	        },	      { _proto: @218,	        text: s,	        viewJustify: 240,	        viewBounds: SetBounds(5, 22, -5, -5),	        viewFont: @100,	        },		]		} );	a:Open();	return nil;	end );