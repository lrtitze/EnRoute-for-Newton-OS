DefConst ( 'kEnglish,	{	enRoute:		{		transportTitle:	"inet Mail",		},	soupDefs:		{		popInfoName:	"EnRoute POP info",		popVisibleName:	"EnRoute internet POP list",		popDescription: "The EnRoute Internet transport saves POP mail headers here.",		},	inkConvert:		{		cvtPOPUserTitle:	"Converting ^0 POP Username",			// ^0 parameter is filled with transport title		cvtNowQuestion:		"Your ^0 POP Host has not been set up.\n\nWould you like to set it up now?",			// ^0 parameter is filled with transport application name		cvtPOPHostTitle:	"Converting ^0 POP Host",			// ^0 parameter is filled with transport title		cvtSMTPHostTitle:	"Converting ^0 SMTP Host",			// ^0 parameter is filled with transport title		cvtSignatureTitle:	"Converting ^0 signature",			// ^0 parameter is filled with transport title		inkVerifyText:		"Please verify that the ink text was converted correctly.",		inkSubstitute:		"-ink-",		ownerInfoOpen:		"Opening owner info…",		ownerInfoSelect:	"Selecting EnRoute info…",		// LRT - 97/02/06 11:39 AM		needSetOwner:		"Your owner info has not been set up.",		needSetOwnerPOP:	"Your owner info (POP user) has not been set up.",		needSetOwnerBoth:	"Your owner info (POP user and SMTP host) has not been set up.",		needSetOwnerSMTP:	"Your owner info (SMTP host) has not been set up.",		needSetOwnerPass:	"Your owner info (POP password) has not been set up.",		wantToSetNow:		"Would you like to set it up now?",		},	statusStrs:		{		setupConn:			"Setting up connection…",		hostTitle:			"Host",		getUserAddr:		"Looking up user address…",		lookingUpHost:		"Looking up host…",		processingMsg:		"Processing message…",		sendingOne:			"Sending ^0 of ^1",			// ^0 is msg num, ^1 is total		checkForMsgs:		"Checking for messages…",		receivingMsgs:		"Receiving messages…",		receivingOne:		"Receiving ^0 of ^1",		// ^0 is msg num, ^1 is total		checkingMsg:		"Checking ^0 of ^1",		// ^0 is msg num, ^1 is total		skippingMsg:		"Skipping message ^0",		// ^0 is msg num		deletingMsg:		"Deleting  ^0 of ^1",		// ^0 is msg num, ^1 is total		sendingMsgs:		"Sending messages…",		whichMsgOf:			"Message ^0 of ^1",			// ^0 is msg num, ^1 is total		openingPOP:			"Opening POP server…",		openingSMTP:		"Opening SMTP server…",		cleanup:			"Cleaning up…",		releasingNet:		"Releasing internet…",		popLoginErr:		"POP Login error.",		},	linkGrabStatus:		{		idle:				"Disconnected",		initializing:		"Initializing…",		connecting:			"Connecting…",		login:				"Logging on…",		connected:			"Connected",		},	linkGrabTitles:		{		waitingFor:			"Waiting for \u0022\u^0\u0022\u",		sending:			"Sending: \u0022\u^0\u0022\u",		dialing:			"Dialing: ^0",		pause:				"Pausing…",			// LRT - 97/02/05 4:31 PM <post-GM>		userName:			"Sending username",		sendCR:				"Sending <CR>",		password:			"Sending password",		buildStack:			"Initializing ^0 connection",		localAddress:		"Waiting for local address",		remoteAddress:		"Waiting for remote address",		},	extrasSlip:		{		copyString:		"© 1995, 1997 Netstrategy Software",		partName:		"EnRoute internet",		created:		"Created:",		author:			"Author:",		},	mime:		{		enclosedText:	"** Enclosed text appended **"					& "\n",		enclosedMsg:	"** Enclosed message appended **"				& "\n",		encSkipped:		"** Enclosed part skipped **"					& "\n",		unrecogFormat:	"** <unrecognized format> **"					& "\n",		unrecogEncType:	"** Unrecognized enclosure data type **"		& "\n",		badEncSkipped:	"** Bad enclosure skipped **"					& "\n",		originalSubj:	"** Original message subject **"				& "\n",		originalTxt:	"** Original message text **"					& "\n",		newMessage:		"** Enclosure saved as new message **"			& "\n",		newtEnclosure:	"****** Newton Enclosure ******"				& "\n",		unrecogSubType:	"** Unrecognized enclosure sub-type **"			& "\n",		outOfTextSpace:	"** Out of space: Message truncated **",		truncatedMsg:	"** This message was truncated. **"				& "\n",		notEnoughMem:	"There wasn't enough memory to load it all"	& "\n",		noReconstruct:	" - unable to reconstruct"						& "\n",		newEncTitle:	"Enc: ^0",		// as in "Enc: MyAttach.pkg"		partsNoText:	"<enclosed parts>"								& "\n",		unknownBin:		"<unknown binary>",		emptyMessage:	"   <empty message>"							& "\n",		noMsgText:		"<no text>"										& "\n",		noSubjectText:	"<no subject>",		fromANewton:	"Transmitted from a Newton using EnRoute",		unable2Read:	"Unable to read.",		fileNameLabel:	"Filename:",		},	errors:		{		unknown:		"unknown",		noFreeToGoOn:			"Free space on \u0022\u^0\u0022\u is too low to proceed safely (less than 32K).\n\nFree up some space by moving or removing data or packages or insert a larger storage card.",		willDisable:	"^0 will be disabled if it is missing.\n",			// ^0 parameter is filled with the transport name		frozen:			"The EnRoute Core was removed so the ^0 transport had to be disabled.\n\nReinstall the EnRoute Core and then tap on the ^0 icon to enable it.",			// ^0 parameter is filled with the transport package name		newNewtOnly:	"Unable to install on this hardware.\n\nPlease contact Netstrategy Software for a version which will work with your Newton.",		coreMissing:	"The EnRoute Core is missing.\n\nDelete ^0 from the Extensions Drawer, install the EnRoute Core and try again.",			// ^0 parameter is filled with the transport's extras name		noMem2TxItem:	"NO MEMORY TO SEND ITEM # ^0",			// ^0 parameter is filled with index of item from out box		noProceed:		"Unable to proceed.\n\n",			// k_UnableProceedString		serverWierd:	"Unable to continue. Server error:\nIt said: ^1\n\nafter we sent: ^0 ",		serverDisconn:	"Rather than responding as expected, the ^0 server disconnected.",			// ^0 parameter is filled with either "POP" or "SMTP"		unable2Connect:	"Unable to connect to \u0022\u^0\u0022",			// ^0 parameter is filled with the remote host name not connected to		badDomainName:	"The domain name \u0022\u^0\u0022\u does not exist",			// ^0 parameter is filled with the domain name not found		unknownErr:		"Unexpected error",		unexpectedErr:	"An unexpected error has occured.  Error code = ",		err10008:		"There does not appear to be a modem attached to this unit.",		err18003:		"The communications data buffer was overrun and has been reset.",		err20006:		"A reliable connection could not be established.",		err38001:		"Connection not established; no response.",		noNIE:			"The Newton Internet Enabler is required for ^0 to function.",			// ^0 parameter is filled with the EnRoute transport name		noNIESetup:		"There is no Internet Setup.\n\nPlease create one using Internet Setup.",		},	infoVDef:		{		title:				"EnRoute Internet Settings",		name:				"EnRoute Internet",		popUserName:		"POP Username",		popHost:			"POP Host",		passBtnLabel:		"POP Password",		smtpHost:			"SMTP Host",		},	newtonOSMatch:		{//		pkgMailDefault:		"No text available for this item",			// this MUST exactly match the default text portion of the message			// as set by the Extras Drawer when a package is mailed			// NOTE: please omit leading and trailing white space as the			// comparison is done after TrimString		},	misc:		{		untitled:		"untitled",		badAddress:		"Invalid Address",		badAddrPlural:	"Invalid Addresses",		notConnected:	"Not connected!",		connectBtnLabel: "Connect",		connectFrom:	"Connect as",		tempKReq:		"K required during receive)",		},} );SetLocalizationFrame ( {	english:	kEnglish,	german:		kGerman,} );DefConst ( 'k_notConnectedString, LocObj ( "Not connected!", 'misc.notConnected ) );DefConst ( 'k_VerifyInkTextString, LocObj ( "Please verify that the ink text was converted correctly.", 'inkConvert.inkVerifyText ) );DefConst ( 'k_UnableToProceedPrefix, LocObj ( "Unable to proceed.\n\n", 'errors.noProceed ) );DefConst ( 'k_UntitledString, LocObj ( "untitled", 'misc.untitled ) );DefConst ( 'k_NewtonMsgString, "\n\n" & LocObj ( "****** Newton Enclosure ******\n", 'mime.newtEnclosure ) );DefConst ( 'k_NewMsgString, LocObj ( "** Enclosure saved as new message **\n", 'mime.newMessage ) );DefConst ( 'k_PartSkippedStr, LocObj ( "** Enclosed part skipped **\n", 'mime.encSkipped ) );DefConst ( 'k_UnrecogFormatStr, "\n" & LocObj ( "** <unrecognized format> **\n", 'mime.unrecogFormat ) );DefConst ( 'k_fNamePrefixStr, LocObj ( "Filename:", 'mime.fileNameLabel ) );