// Created by Newton Book Maker 1.1// ¡¡ Note: This file may contain needed resources !! // Documentbook := {	version: 2,	isbn: "ISBN1:01:57 AM",	help: TRUE,	contents: Array(14, NIL),	styles: [],	browsers: [], templates: [], rendering: []};//output.book := book;//output.help := TRUE;// Shared Map Functionsfunc MakePage(aTemplate)	{template: aTemplate, blocks: []};func MakeBlock(aBounds, anItem)	{bounds: aBounds, item: anItem};// Shared ScriptsgotoDestScript := func() begin	if (curRendering = 0) then :TurnToPage(destPage);	else :TurnToPage(:FindPageByContent(kioskDest, 0, NIL));end;// Text Styless0 := {	family: 'Geneva,	face: 0,	size: 9};AddArraySlot(book.styles, s0);s1 := {	family: 'espy /* Monaco */,	face: 0,	size: 10};AddArraySlot(book.styles, s1);s2 := {	family: 'Espy,	face: 1,	size: 14};AddArraySlot(book.styles, s2);s3 := {	family: 'Espy,	face: 1,	size: 10};AddArraySlot(book.styles, s3);s4 := {	family: 'Espy,	face: 0,	size: 10};AddArraySlot(book.styles, s4);// Contentsc1 := {	data: "Verwenden des EnRoute Regel-Editors",	viewFont: s3,	layout: 32};book.contents[0] := c1;c2 := {	data: "Im folgenden finden Sie die wichtigsten Informationen zum Verwenden des EnRoute Regel-Editors. Bitte beachten Sie die Informationen in der gedruckten Dokumentation, wenn Sie ausführlichere Informationen wünschen.Der Regel-Editor wird mit EnRoute i-net geliefert. Er befindet sich im Ordner „Einstellungen\u201c" & " in den „Extras\u201c" & ".Sie können den Regel-Editor auch über das Zusatzmodul „Regel-Filter\u201c" & " öffnen, indem Sie auf die Taste „Regel-Editor\u201c" & " tippen.",	viewFont: s4};book.contents[1] := c2;c3 := {	data: "Verwenden von Regeln",	viewFont: s3,	layout: 32};book.contents[2] := c3;c4 := {	data: "Mit dem EnRoute Regel-Editor können Sie Regelsätze erstellen und mit dem Zusatzmodul „Regel-Filter für Nachrichten\u201c" & " verwenden.Der Regel-Filter für Nachrichten kann EnRoute i-net auf der Grundlage umfangreicher Kriterien anweisen, E-Mail-Nachrichten zu empfangen oder abzulehnen. Die Kriterien definieren Sie mit dem Regel-Editor.Nachdem Sie Regelsätze erstellt haben, benötigen Sie den Regel-Editor nicht mehr, damit der Regel-Filter für Nachrichten funktioniert.",	viewFont: s4};book.contents[3] := c4;c5 := {	data: "Erstellen neuer Regeln",	viewFont: s3,	layout: 32};book.contents[4] := c5;c6 := {	data: "Sie erstellen einen neuen Regelsatz, indem Sie im Regel-Editor auf die Taste „Neu\u201c" & " tippen. Ein leeres Formular mit einem neuen Regelsatz wird angezeigt. Tippen Sie unten im Formular auf die Taste „Regeln\u201c" & ", um eine neue Regel zu erstellen. Ein Zettel wird angezeigt, in dem Sie die Regel-Kriterien wunschgemäß festlegen können.",	viewFont: s4};book.contents[5] := c6;c7 := {	data: "Festlegen der Regel-Kriterien",	viewFont: s3,	layout: 32};book.contents[6] := c7;c8 := {	data: "Im Regel-Zettel finden Sie drei Einblendlisten und eine Zeile für die Texteingabe. Die ersten beiden Einblendlisten und die Eingabezeile enthalten den „Wenn\u201c" & "-Teil einer Wenn-/Dann-Bedingung. Durch die Auswahl eines Eintrages aus dem ersten Menü bestimmen Sie, welche anderen Auswahlmöglichkeiten zur Verfügung stehen.Eine oder mehrere Regeln, die im Regel-Formular festgelegt wurden, werden als Regelsatz bezeichnet. Sie können maximal 24 Regeln pro Satz festlegen.",	styles: [468, s4, 1, s1]};book.contents[7] := c8;c9 := {	data: "Anordnen von Regeln",	styles: [19, s3, 1, s4],	layout: 32};book.contents[8] := c9;c10 := {	data: "Die Regelsätze sind hierarchisch angelegt. Daher ist die Reihenfolge, in der die Regeln aufgeführt sind, sehr wichtig. Eine eingehende Nachricht wird mit der ersten Regel in der Konfiguration abgeglichen. Wenn die Regel zutrifft, werden die verbleibenden Regeln nicht angewendet.Wenn Sie die Hierarchie des Regelsatzes ändern wollen, tippen Sie auf den Punkt der Regel, die Sie umstellen möchten, und ziehen Sie sie an die gewünschte Position.Wenn Sie eine Regel löschen wollen, streichen Sie sie mit einer"&" Zickzacklinie durch.",	viewFont: s4};book.contents[9] := c10;c11 := {	data: "Benennen und Ablegen von Regelsätzen",	styles: [36, s3, 1, s4],	layout: 32};book.contents[10] := c11;c12 := {	data: "Nachdem Sie einen Regelsatz festgelegt haben, sollten Sie ihn benennen, damit Sie ihn später erneut verwenden können.Sie benennen einen Regelsatz, indem Sie auf die Bildtaste oben links im Zettel tippen.Sie legen einen Regelsatz ab, indem Sie auf den Ordner unten rechts im Zettel tippen.Mit EnRoute i-net können Sie jeweils einen Regelsatz (nach Namen) auswählen. Sie können den Regel-Filter auch komplett aktivieren oder deaktivieren.",	viewFont: s4};book.contents[11] := c12;c13 := {	data: "Verwenden weiterer Funktionen",	styles: [29, s3, 1, s4],	layout: 32};book.contents[12] := c13;c14 := {	data: "Wenn Sie einen Regelsatz verwenden wollen, der sich auf einer Speicherkarte befindet, wählen Sie den Satz mit dem Regel-Filter für Nachrichten aus, bevor Sie die Karte aus dem Gerät nehmen.Eine Nachricht wird geladen, wenn keine Regeln aus einem Regelsatz auf sie zutrifft. Sie können das verhindern, indem Sie eine letzte Regel erstellen, mit der Nachrichten übersprungen werden, wenn sie größer als zwei Byte sind.Wenn Sie den POP-Listenmanager-Vorspann lesen möchten, ohne die zugehörige Nachricht zu la"&"den, erstellen Sie einen Regelsatz mit einer einzigen Regel, mit der Nachrichten übersprungen werden, die größer als zwei Byte sind.",	viewFont: s4};book.contents[13] := c14;// Kiosk (menu page) references// Page TemplatesNBMDefault := {	nColumns: 1,	column: [{	width: 12,	type: 0}]};AddArraySlot(book.templates, NBMDefault);// Bounds Listbnd1 := [0,0,206,28];bnd2 := [0,28,206,214];bnd3 := [0,0,206,214];bnd4 := [0,0,206,14];bnd5 := [0,14,206,214];bnd6 := [0,0,206,84];// PagespageList := {pageSize: {left: 0, top: 0, right: 206, bottom: 214}, pages: []};// Page 1page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd1, c1));AddArraySlot(page.blocks,	{bounds: bnd2,	item: c2,	dataLen: 409});AddArraySlot(pageList.pages, page);// Page 2page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd3,	item: c2,	dataOffset: 409,	dataLen: 40});AddArraySlot(pageList.pages, page);// Page 3page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd4, c3));AddArraySlot(page.blocks,	{bounds: bnd5,	item: c4,	dataLen: 409});AddArraySlot(pageList.pages, page);// Page 4page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd3,	item: c4,	dataOffset: 409,	dataLen: 58});AddArraySlot(pageList.pages, page);// Page 5page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd4, c5));AddArraySlot(page.blocks, MakeBlock(bnd5, c6));AddArraySlot(pageList.pages, page);// Page 6page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd4, c7));AddArraySlot(page.blocks,	{bounds: bnd5,	item: c8,	dataLen: 438});AddArraySlot(pageList.pages, page);// Page 7page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd3,	item: c8,	dataOffset: 438,	dataLen: 29});AddArraySlot(pageList.pages, page);// Page 8page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd4, c9));AddArraySlot(page.blocks,	{bounds: bnd5,	item: c10,	dataLen: 483});AddArraySlot(pageList.pages, page);// Page 9page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd3,	item: c10,	dataOffset: 483,	dataLen: 48});AddArraySlot(pageList.pages, page);// Page 10page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd1, c11));AddArraySlot(page.blocks,	{bounds: bnd2,	item: c12,	dataLen: 331});AddArraySlot(pageList.pages, page);// Page 11page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd3,	item: c12,	dataOffset: 331,	dataLen: 111});AddArraySlot(pageList.pages, page);// Page 12page := MakePage(NBMDefault);AddArraySlot(page.blocks, MakeBlock(bnd4, c13));AddArraySlot(page.blocks,	{bounds: bnd5,	item: c14,	dataLen: 451});AddArraySlot(pageList.pages, page);// Page 13page := MakePage(NBMDefault);AddArraySlot(page.blocks,	{bounds: bnd6,	item: c14,	dataOffset: 451,	dataLen: 191});AddArraySlot(pageList.pages, page);AddArraySlot(book.rendering, pageList);// Browsers & “Page Hints”b1 := {	name: "Contents",  list: []};AddArraySlot(b1.list, {	// 0	item: c1});AddArraySlot(b1.list, {	// 1	item: c3});AddArraySlot(b1.list, {	// 2	item: c5});AddArraySlot(b1.list, {	// 3	item: c7});AddArraySlot(b1.list, {	// 4	item: c9});AddArraySlot(b1.list, {	// 5	item: c11});AddArraySlot(b1.list, {	// 6	item: c13});AddArraySlot(book.browsers, b1);// Indices and Sub-Indices